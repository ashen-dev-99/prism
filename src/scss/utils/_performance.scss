// =============================================================================
// PERFORMANCE OPTIMIZATIONS
// =============================================================================
// CSS performance optimizations and best practices

// Reduce paint and layout operations
// =============================================================================
.gpu-accelerated {
  transform: translateZ(0);
  will-change: transform;
}

.smooth-scroll {
  scroll-behavior: smooth;
}

// Optimize animations
// =============================================================================
.animate-transform {
  will-change: transform;
}

.animate-opacity {
  will-change: opacity;
}

.animate-all {
  will-change: transform, opacity;
}

// Reduce specificity for better performance
// =============================================================================
// Use classes instead of complex selectors
.btn {
  // Base button styles
}

.btn--primary {
  // Primary button variant
}

.btn--large {
  // Large button variant
}

// Avoid deep nesting (max 3 levels)
.card {
  .card__header {
    .card__title {
      // Good: 3 levels max
    }
  }
}

// Use BEM methodology for better performance
.component {
  &__element {
    &--modifier {
      // BEM structure for better performance
    }
  }
}

// Optimize media queries
// =============================================================================
// Group media queries by breakpoint
@media (max-width: 768px) {
  .mobile-only {
    display: block;
  }
  
  .desktop-only {
    display: none;
  }
  
  .responsive-grid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 480px) {
  .mobile-small {
    font-size: 0.875rem;
  }
}

// Optimize transitions
// =============================================================================
// Use transform and opacity for better performance
.optimized-transition {
  transition: transform 0.3s ease, opacity 0.3s ease;
}

// Avoid animating layout properties
.avoid-layout-animation {
  // Don't animate: width, height, margin, padding
  // Do animate: transform, opacity, color, background-color
}

// Optimize box-shadow
// =============================================================================
// Use transform instead of box-shadow for performance
.optimized-shadow {
  transform: translateY(2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

// Use will-change sparingly
// =============================================================================
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

.will-change-scroll {
  will-change: scroll-position;
}

// Optimize for mobile
// =============================================================================
@media (max-width: 768px) {
  // Reduce animations on mobile for better performance
  .mobile-optimized {
    animation: none;
    transition: none;
  }
  
  // Use simpler shadows on mobile
  .mobile-shadow {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
}

// Optimize for reduced motion
// =============================================================================
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// Optimize for high contrast mode
// =============================================================================
@media (prefers-contrast: high) {
  .high-contrast {
    border: 2px solid currentColor;
  }
}

// Optimize for dark mode
// =============================================================================
@media (prefers-color-scheme: dark) {
  .auto-dark {
    background-color: var(--color-surface-dark);
    color: var(--color-text-primary-dark);
  }
}

// Optimize for print
// =============================================================================
@media print {
  .print-optimized {
    background: white !important;
    color: black !important;
    box-shadow: none !important;
  }
}

// CSS containment for better performance
// =============================================================================
.contain-layout {
  contain: layout;
}

.contain-style {
  contain: style;
}

.contain-paint {
  contain: paint;
}

.contain-size {
  contain: size;
}

.contain-strict {
  contain: strict;
}

// Optimize grid and flexbox
// =============================================================================
.optimized-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
}

.optimized-flex {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

// Optimize images
// =============================================================================
.optimized-image {
  max-width: 100%;
  height: auto;
  object-fit: cover;
}

// Optimize fonts
// =============================================================================
.font-display-swap {
  font-display: swap;
}

.font-display-fallback {
  font-display: fallback;
}

.font-display-optional {
  font-display: optional;
}

// Optimize for touch devices
// =============================================================================
@media (hover: none) and (pointer: coarse) {
  .touch-optimized {
    min-height: 44px; // Minimum touch target size
    min-width: 44px;
  }
}

// Optimize for focus management
// =============================================================================
.focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

// Optimize for screen readers
// =============================================================================
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Optimize for performance monitoring
// =============================================================================
.performance-mark {
  content-visibility: auto;
  contain-intrinsic-size: 0 500px;
}

// Optimize for critical rendering path
// =============================================================================
.critical {
  // Styles that are critical for above-the-fold content
  display: block;
  visibility: visible;
}

.non-critical {
  // Styles that can be loaded later
  content-visibility: auto;
} 